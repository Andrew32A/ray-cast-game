{"version":3,"sources":["components/Title/Title.js","components/App.js","components/HowToPlay/HowToPlay.js","reportWebVitals.js","index.js"],"names":["Title","react_default","a","createElement","className","loadGame","setTimeout","window","location","loadSandbox","App","components_Title_Title","onClick","dist","to","HowToPlay","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","react_router_dist","path","index","element","components_App","components_HowToPlay_HowToPlay"],"mappings":"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","file":"static/js/main.e32c96ae.chunk.js","sourcesContent":["// import { NavLink } from 'react-router-dom'\nimport './Title.css';\nimport React from 'react';\n\nfunction Title() {\n    return (\n        <div className=\"Title\">\n        <header className='title-wrapper'>\n            <section>\n                <div className=\"content\">\n                    <h2>Ray Cast Demo</h2>\n                    <h2>Ray Cast Demo</h2>\n                </div>\n            </section>\n        </header>\n        </div>\n    )\n}\n  \nexport default Title","import React from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport Title from './Title/Title';\n\nfunction loadGame() {\n  setTimeout(() => {\n    window.location = \"/ray-cast-game/game.html\";\n  }, 500);\n}\n\nfunction loadSandbox() {\n  setTimeout(() => {\n    window.location = \"/ray-cast-game/sandbox.html\";\n  }, 500);\n}\n\nfunction App() {  \n  return (\n    <div className=\"menuWrapper\">\n      <header className=\"menuHeader\">\n          <Title />\n          <ul>\n            {/* directly linked the game, BE SURE TO CHANGE IF SITE IS MOVED */}\n            <li><div className='btn-one'><p className='startButton option' onClick={loadGame}>Start</p></div></li>\n            <li><div className='btn-one'><p className='startButton option' onClick={loadSandbox}>Sandbox</p></div></li>\n            <li><div className='btn-one'><Link to=\"/HowToPlay\" className='option'>How to Play</Link></div></li>\n            <li><div className='btn-one'><Link to=\"https://github.com/Andrew32A/ray-cast-game\" className='option'>Repo</Link></div></li>\n          </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport \"./HowToPlay.css\"\nimport Title from '../Title/Title';\n\nfunction HowToPlay() {\n    return (\n        <div className=\"HowToPlay\">\n            <Title />\n            <section>\n                <div className=\"rules\">\n                    <div className='rules-title'>How To Play</div>\n                    <div className='rules-content'>\n                        <ol>\n                            <li>If the enemy touches the player, it’s <b className='bolded-red'>game over</b></li>\n                            <li>The player can <b className='bolded-blue'>“freeze”</b> the <b className='bolded-red'>enemy</b> by looking at them</li>\n                            <li>Gain points by looking away from the <b className='bolded-red'>enemy</b></li>\n                        </ol>\n                    </div>\n                </div>\n                <div className=\"controls\">\n                    <div className='controls-title'>Controls</div>\n                    <div className='controls-content'>\n                        <ul>\n                            <li>WASD - Move</li>\n                            <li>Mouse - Camera angle</li>\n                            <li>Q - Toggle minimap</li>\n                        </ul>\n                    </div>\n\n                </div>\n            </section>\n        </div>\n    )\n}\n  \nexport default HowToPlay","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App';\nimport HowToPlay from './components/HowToPlay/HowToPlay';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <Router>\n    <Routes>\n      <Route path='/'>\n        <Route index element={<App />} />\n        <Route path='/HowToPlay' element={<HowToPlay />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}